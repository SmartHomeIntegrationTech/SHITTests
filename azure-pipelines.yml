# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: 'sudo apt-get install bazel'
  displayName: 'Installing Bazel'
- bash: 'bazel --output_base=$(Common.TestResultsDirectory)/output test --test_output=all --test_tmpdir=$(Common.TestResultsDirectory) ...;exit 0'
  displayName: 'Running tests'
  env:
    XML_OUTPUT_FILE: $(Common.TestResultsDirectory)/test.xml
    TEST_INFRASTRUCTURE_FAILURE_FILE: $(Common.TestResultsDirectory)/TEST_INFRASTRUCTURE_FAILURE_FILE
    TEST_LOGSPLITTER_OUTPUT_FILE: $(Common.TestResultsDirectory)/TEST_LOGSPLITTER_OUTPUT_FILE
    TEST_PREMATURE_EXIT_FILE: $(Common.TestResultsDirectory)/TEST_PREMATURE_EXIT_FILE
    TEST_UNDECLARED_OUTPUTS_DIR: $(Common.TestResultsDirectory)/TEST_UNDECLARED_OUTPUTS_DIR
    TEST_UNDECLARED_OUTPUTS_ANNOTATIONS_DIR: $(Common.TestResultsDirectory)/TEST_UNDECLARED_OUTPUTS_ANNOTATIONS_DIR
    TEST_WARNINGS_OUTPUT_FILE: $(Common.TestResultsDirectory)/TEST_WARNINGS_OUTPUT_FILE
- script: 'cat $(Common.TestResultsDirectory)/*;exit 0'
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Common.TestResultsDirectory)/output/execroot/__main__/bazel-out/k8-fastbuild/testlogs/**/test.xml'
    testRunTitle: 'All tests'
  displayName: 'Publishing results'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Common.TestResultsDirectory)/output/execroot/__main__/bazel-out/k8-fastbuild/testlogs/'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    artifact: 'Logs and output'
    publishLocation: 'pipeline'
